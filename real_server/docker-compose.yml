services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    networks:
      - app-network 

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://myuser:mypassword@db:5432/mydatabase?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - db
    networks:
      - app-network

  backend:
    build: .
    command: >
      sh -c "
      until pg_isready -h db -p 5432; do
      echo 'Esperando a que la base de datos est√© lista...';
      sleep 1;
      done &&
      python manage.py collectstatic --noinput &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=ft_transcendence_backend.settings
      - DJANGO_DEBUG=True
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydatabase
    depends_on:
      - db
    networks:
      - app-network


  grafana:
    build: ../monitoring/grafana/
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    networks:
      - app-network 

  prometheus:
    build: ../monitoring/prometheus/
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - app-network
  
  elasticsearch:
    build: ../monitoring/elasticsearch/
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - app-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx512m
    ports:
      - "5044:5044"
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - app-network


  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - app-network
    depends_on:
      - elasticsearch


volumes:
  grafana_data:
  postgres_data:
  prometheus_data:
  frontend_data: 
  elasticsearch_data:
  logstash_data:
  kibana_data:

networks:
  app-network: 
    driver: bridge
